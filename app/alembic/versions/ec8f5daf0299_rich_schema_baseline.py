"""rich_schema_baseline

Revision ID: ec8f5daf0299
Revises: 2d3329f135f3
Create Date: 2025-08-10 19:55:14.993010

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ec8f5daf0299'
down_revision: Union[str, Sequence[str], None] = '2d3329f135f3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('audit_log',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('tenant_id', sa.String(), nullable=False),
    sa.Column('actor', sa.String(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('entity', sa.String(), nullable=False),
    sa.Column('entity_id', sa.Integer(), nullable=False),
    sa.Column('before', sa.Text(), nullable=True),
    sa.Column('after', sa.Text(), nullable=True),
    sa.Column('at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_audit_log_action'), 'audit_log', ['action'], unique=False)
    op.create_index(op.f('ix_audit_log_actor'), 'audit_log', ['actor'], unique=False)
    op.create_index(op.f('ix_audit_log_at'), 'audit_log', ['at'], unique=False)
    op.create_index(op.f('ix_audit_log_entity'), 'audit_log', ['entity'], unique=False)
    op.create_index(op.f('ix_audit_log_entity_id'), 'audit_log', ['entity_id'], unique=False)
    op.create_index(op.f('ix_audit_log_tenant_id'), 'audit_log', ['tenant_id'], unique=False)
    op.create_table('employee',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('tenant_id', sa.String(), nullable=False),
    sa.Column('employee_ext_id', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('hire_date', sa.Date(), nullable=False),
    sa.Column('termination_date', sa.Date(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_employee_employee_ext_id'), 'employee', ['employee_ext_id'], unique=False)
    op.create_index(op.f('ix_employee_tenant_id'), 'employee', ['tenant_id'], unique=False)
    op.create_table('event_log',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('tenant_id', sa.String(), nullable=False),
    sa.Column('event_type', sa.String(), nullable=False),
    sa.Column('event_source', sa.String(), nullable=False),
    sa.Column('severity', sa.String(), nullable=False),
    sa.Column('payload', sa.JSON(), nullable=True),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_event_log_created_at'), 'event_log', ['created_at'], unique=False)
    op.create_index(op.f('ix_event_log_event_source'), 'event_log', ['event_source'], unique=False)
    op.create_index(op.f('ix_event_log_event_type'), 'event_log', ['event_type'], unique=False)
    op.create_index(op.f('ix_event_log_severity'), 'event_log', ['severity'], unique=False)
    op.create_index(op.f('ix_event_log_tenant_id'), 'event_log', ['tenant_id'], unique=False)
    op.create_table('payroll_batch',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('tenant_id', sa.String(), nullable=False),
    sa.Column('period_start', sa.Date(), nullable=False),
    sa.Column('period_end', sa.Date(), nullable=False),
    sa.Column('source', sa.String(), nullable=False),
    sa.Column('uploaded_by', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payroll_batch_period_end'), 'payroll_batch', ['period_end'], unique=False)
    op.create_index(op.f('ix_payroll_batch_period_start'), 'payroll_batch', ['period_start'], unique=False)
    op.create_index(op.f('ix_payroll_batch_tenant_id'), 'payroll_batch', ['tenant_id'], unique=False)
    op.create_table('plan',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('tenant_id', sa.String(), nullable=False),
    sa.Column('plan_code', sa.String(), nullable=False),
    sa.Column('plan_name', sa.String(), nullable=False),
    sa.Column('plan_type', sa.String(), nullable=False),
    sa.Column('carrier', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_plan_plan_code'), 'plan', ['plan_code'], unique=False)
    op.create_index(op.f('ix_plan_tenant_id'), 'plan', ['tenant_id'], unique=False)
    op.create_table('system_config',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('config_key', sa.String(), nullable=False),
    sa.Column('config_value', sa.Text(), nullable=False),
    sa.Column('config_type', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_system_config_config_key'), 'system_config', ['config_key'], unique=True)
    op.create_table('tenant',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('display_name', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dependent',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('tenant_id', sa.String(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('dependent_ext_id', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('relationship', sa.String(), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dependent_dependent_ext_id'), 'dependent', ['dependent_ext_id'], unique=False)
    op.create_index(op.f('ix_dependent_employee_id'), 'dependent', ['employee_id'], unique=False)
    op.create_index(op.f('ix_dependent_tenant_id'), 'dependent', ['tenant_id'], unique=False)
    op.create_table('pay_item',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('tenant_id', sa.String(), nullable=False),
    sa.Column('payroll_batch_id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=True),
    sa.Column('employee_ext_id', sa.String(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('contribution_pct', sa.Float(), nullable=False),
    sa.Column('period_start', sa.Date(), nullable=False),
    sa.Column('period_end', sa.Date(), nullable=False),
    sa.Column('memo', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], ),
    sa.ForeignKeyConstraint(['payroll_batch_id'], ['payroll_batch.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pay_item_code'), 'pay_item', ['code'], unique=False)
    op.create_index(op.f('ix_pay_item_employee_ext_id'), 'pay_item', ['employee_ext_id'], unique=False)
    op.create_index(op.f('ix_pay_item_employee_id'), 'pay_item', ['employee_id'], unique=False)
    op.create_index(op.f('ix_pay_item_payroll_batch_id'), 'pay_item', ['payroll_batch_id'], unique=False)
    op.create_index(op.f('ix_pay_item_period_end'), 'pay_item', ['period_end'], unique=False)
    op.create_index(op.f('ix_pay_item_period_start'), 'pay_item', ['period_start'], unique=False)
    op.create_index(op.f('ix_pay_item_tenant_id'), 'pay_item', ['tenant_id'], unique=False)
    op.create_table('reconciliation_run',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('tenant_id', sa.String(), nullable=False),
    sa.Column('payroll_batch_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['payroll_batch_id'], ['payroll_batch.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reconciliation_run_payroll_batch_id'), 'reconciliation_run', ['payroll_batch_id'], unique=False)
    op.create_index(op.f('ix_reconciliation_run_tenant_id'), 'reconciliation_run', ['tenant_id'], unique=False)
    op.create_table('ach_transfer',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('tenant_id', sa.String(), nullable=False),
    sa.Column('run_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('file_ref', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['run_id'], ['reconciliation_run.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ach_transfer_run_id'), 'ach_transfer', ['run_id'], unique=False)
    op.create_index(op.f('ix_ach_transfer_tenant_id'), 'ach_transfer', ['tenant_id'], unique=False)
    op.create_table('enrollment',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('tenant_id', sa.String(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('plan_id', sa.Integer(), nullable=False),
    sa.Column('dependent_id', sa.Integer(), nullable=True),
    sa.Column('effective_from', sa.Date(), nullable=False),
    sa.Column('effective_to', sa.Date(), nullable=True),
    sa.Column('contribution_pct', sa.Float(), nullable=False),
    sa.Column('contribution_amount', sa.Float(), nullable=True),
    sa.Column('coverage_level', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['dependent_id'], ['dependent.id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], ),
    sa.ForeignKeyConstraint(['plan_id'], ['plan.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_enrollment_dependent_id'), 'enrollment', ['dependent_id'], unique=False)
    op.create_index(op.f('ix_enrollment_effective_from'), 'enrollment', ['effective_from'], unique=False)
    op.create_index(op.f('ix_enrollment_effective_to'), 'enrollment', ['effective_to'], unique=False)
    op.create_index(op.f('ix_enrollment_employee_id'), 'enrollment', ['employee_id'], unique=False)
    op.create_index(op.f('ix_enrollment_plan_id'), 'enrollment', ['plan_id'], unique=False)
    op.create_index(op.f('ix_enrollment_tenant_id'), 'enrollment', ['tenant_id'], unique=False)
    op.create_table('reconciliation_item',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('run_id', sa.Integer(), nullable=False),
    sa.Column('employee_ext_id', sa.String(), nullable=False),
    sa.Column('issue_type', sa.String(), nullable=False),
    sa.Column('expected_pct', sa.Float(), nullable=True),
    sa.Column('actual_pct', sa.Float(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('details', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['run_id'], ['reconciliation_run.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reconciliation_item_employee_ext_id'), 'reconciliation_item', ['employee_ext_id'], unique=False)
    op.create_index(op.f('ix_reconciliation_item_issue_type'), 'reconciliation_item', ['issue_type'], unique=False)
    op.create_index(op.f('ix_reconciliation_item_run_id'), 'reconciliation_item', ['run_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_reconciliation_item_run_id'), table_name='reconciliation_item')
    op.drop_index(op.f('ix_reconciliation_item_issue_type'), table_name='reconciliation_item')
    op.drop_index(op.f('ix_reconciliation_item_employee_ext_id'), table_name='reconciliation_item')
    op.drop_table('reconciliation_item')
    op.drop_index(op.f('ix_enrollment_tenant_id'), table_name='enrollment')
    op.drop_index(op.f('ix_enrollment_plan_id'), table_name='enrollment')
    op.drop_index(op.f('ix_enrollment_employee_id'), table_name='enrollment')
    op.drop_index(op.f('ix_enrollment_effective_to'), table_name='enrollment')
    op.drop_index(op.f('ix_enrollment_effective_from'), table_name='enrollment')
    op.drop_index(op.f('ix_enrollment_dependent_id'), table_name='enrollment')
    op.drop_table('enrollment')
    op.drop_index(op.f('ix_ach_transfer_tenant_id'), table_name='ach_transfer')
    op.drop_index(op.f('ix_ach_transfer_run_id'), table_name='ach_transfer')
    op.drop_table('ach_transfer')
    op.drop_index(op.f('ix_reconciliation_run_tenant_id'), table_name='reconciliation_run')
    op.drop_index(op.f('ix_reconciliation_run_payroll_batch_id'), table_name='reconciliation_run')
    op.drop_table('reconciliation_run')
    op.drop_index(op.f('ix_pay_item_tenant_id'), table_name='pay_item')
    op.drop_index(op.f('ix_pay_item_period_start'), table_name='pay_item')
    op.drop_index(op.f('ix_pay_item_period_end'), table_name='pay_item')
    op.drop_index(op.f('ix_pay_item_payroll_batch_id'), table_name='pay_item')
    op.drop_index(op.f('ix_pay_item_employee_id'), table_name='pay_item')
    op.drop_index(op.f('ix_pay_item_employee_ext_id'), table_name='pay_item')
    op.drop_index(op.f('ix_pay_item_code'), table_name='pay_item')
    op.drop_table('pay_item')
    op.drop_index(op.f('ix_dependent_tenant_id'), table_name='dependent')
    op.drop_index(op.f('ix_dependent_employee_id'), table_name='dependent')
    op.drop_index(op.f('ix_dependent_dependent_ext_id'), table_name='dependent')
    op.drop_table('dependent')
    op.drop_table('tenant')
    op.drop_index(op.f('ix_system_config_config_key'), table_name='system_config')
    op.drop_table('system_config')
    op.drop_index(op.f('ix_plan_tenant_id'), table_name='plan')
    op.drop_index(op.f('ix_plan_plan_code'), table_name='plan')
    op.drop_table('plan')
    op.drop_index(op.f('ix_payroll_batch_tenant_id'), table_name='payroll_batch')
    op.drop_index(op.f('ix_payroll_batch_period_start'), table_name='payroll_batch')
    op.drop_index(op.f('ix_payroll_batch_period_end'), table_name='payroll_batch')
    op.drop_table('payroll_batch')
    op.drop_index(op.f('ix_event_log_tenant_id'), table_name='event_log')
    op.drop_index(op.f('ix_event_log_severity'), table_name='event_log')
    op.drop_index(op.f('ix_event_log_event_type'), table_name='event_log')
    op.drop_index(op.f('ix_event_log_event_source'), table_name='event_log')
    op.drop_index(op.f('ix_event_log_created_at'), table_name='event_log')
    op.drop_table('event_log')
    op.drop_index(op.f('ix_employee_tenant_id'), table_name='employee')
    op.drop_index(op.f('ix_employee_employee_ext_id'), table_name='employee')
    op.drop_table('employee')
    op.drop_index(op.f('ix_audit_log_tenant_id'), table_name='audit_log')
    op.drop_index(op.f('ix_audit_log_entity_id'), table_name='audit_log')
    op.drop_index(op.f('ix_audit_log_entity'), table_name='audit_log')
    op.drop_index(op.f('ix_audit_log_at'), table_name='audit_log')
    op.drop_index(op.f('ix_audit_log_actor'), table_name='audit_log')
    op.drop_index(op.f('ix_audit_log_action'), table_name='audit_log')
    op.drop_table('audit_log')
    # ### end Alembic commands ###
